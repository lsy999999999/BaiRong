{
  "domain": "Economics",
  "scene_name": "sequence_driven_property_rights_on_grid",
  "odd_protocol": {
    "overview": {
      "system_goal": "Simulate homogeneous miner agents on a homogeneous 10×10 grid to study decentralized property-rights formation without communication or authority and its impact on distribution, stability, conflict, and productive efficiency; evaluate whether stable holdings and high efficiency emerge under a stamina-budgeted, cap-limited, nondepleting resource extraction regime; with the update, the system also assesses how explicit action ordering (defend vs. mine sequencing) affects protection success and output; agents individually optimize personal cumulative gold while the system tracks aggregate efficiency and equity outcomes.",
      "agent_types": "N homogeneous miner agents (LLM-driven, no communication, no authority) each round receive stamina S=10 that resets and cannot be carried over; agents now submit an ordered sequence of unit actions, each costing exactly 1 stamina, comprising DEFEND(r,c), MINE1(r,c), CLAIM(r,c), and RAID(r,c); the agent objective is strictly personal cumulative gold maximization (智能体优化自己的累计金币).",
      "environment_description": "A 10×10 lattice of 100 identical plots with nondepleting resources and a fixed per-plot per-round extraction cap s_max=3 (linear mapping 0→0, 1→1, 2→2, 3→3); no terrain heterogeneity and no spatial externalities beyond ownership and targeting rules; ownership transitions are stamina-mediated with explicit claim and raid mechanics; newly acquired plots do not produce until the next round.",
      "grid_and_indexing_scheme": "Grid is 10×10 with zero-based rows and columns: r in [0,9], c in [0,9]; row-major index idx(r,c)=10*r+c; default ascending order is 0,1,2,…,99 and default descending is 99,…,1,0; wherever the protocol says 'scan in descending order', iterate idx from 99 down to 0; RNG tie-break traversal also uses a fixed row-major order for reproducibility.",
      "resource_and_production_cap": "Per-plot per-round output capped at 3 gold; mining is represented as MINE1 unit actions, each worth 1 point on a legal owned-at-start plot up to the cap of 3 per plot per round; mapping is linear: 0→0, 1→1, 2→2, 3→3; q=1.",
      "property_rights_and_ownership_model": "No communication and no centralized authority; property is established and contested via stamina-based CLAIM and RAID; CLAIM on an unowned-at-start plot costs 1 per claimant with uniform random selection among claimants; RAID on an owned-at-start plot costs 1 per raider; owners may precommit defense via DEFEND(r,c); block-all defense rule: if at least one DEFEND on a plot is accepted this round, all RAIDs on that plot this round fail; all valid CLAIM/RAID stamina costs are paid regardless of success.",
      "initial_conditions_and_first_round_rules": "At round 1 all plots are unowned (第一轮初始化所有地块无主), all miners start with 0 gold (矿工有0个金币), and the first round cannot include mining payouts (第一轮无法开采) because no agent owns any plot at the start of round 1; newly acquired plots via CLAIM or RAID begin producing only from the next round.",
      "observability_and_memory_policy": "Minimal public information with short memory (最小公开信息 + 短记忆); each agent observes the current ownership grid and the previous round’s public outcomes only; public outcomes for the previous round include, for each plot, whether it was raided and the result including the identity of the winning party when a raid occurred (上一轮每块地是否遭到抢占/结果（谁赢）); privately, each agent also sees its own previous round actions and payoff; agents do not observe others’ current-round defense precommits or stamina allocations and do not retain cross-round private long-term memory.",
      "efficiency_benchmark_and_targets": "The efficiency upper bound assumes zero stamina spent on raiding or defense, no contention losses, and all feasible stamina deployed to mining under s_max=3; realized cumulative output is compared to this bound with a target ratio of 80%–90%, acknowledging that CLAIM/RAID costs, defense, forfeited mining on lost plots, and tie-break losses reduce productive efficiency; the sequence-driven submission allows studying efficiency impacts of action ordering under the same bound.",
      "replication_and_runs": "Run both N=10 and N=20 settings; time horizon H=100 with robustness runs at R=200; use fixed random seeds and repeat across at least 30 distinct seeds for robustness and reproducibility; a single global RNG (e.g., Mersenne Twister) is seeded with a run-level RUN_SEED and used for all stochastic choices; no system-level reordering is applied to agent submissions, preserving reproducibility.",
      "rng_and_tie_break_determinism": "A single global random source seeded by RUN_SEED drives all tie-breaks; when multiple CLAIMs target the same unowned-at-start plot, one claimant is chosen uniformly at random; when multiple RAIDs target an undefended owned-at-start plot, exactly one raider is chosen uniformly at random; random draws are consumed in a deterministic row-major traversal of plots so that identical inputs yield identical outputs."
    },
    "design_concepts": {
      "interaction_patterns": "Each round is simultaneous-move but submission is an ordered sequence of unit actions per agent; Stage A (Commit & acceptance): the system processes each agent’s sequence head-to-tail, accepting legal unit actions that each consume 1 stamina until the agent’s stamina is exhausted; illegal or inapplicable unit actions are skipped without cost; DEFEND acceptance flags the plot as defended for that agent’s holdings for the round; Stage B (Ownership transitions): resolve CLAIMs on unowned-at-start plots, then resolve RAIDs on owned-at-start plots using block-all defense; Stage C (Mining payouts): pay out only for accepted MINE1 on plots owned at the start and still owned after Stage B, up to 3 per plot; newly acquired plots do not produce in the acquisition round; round 1 has no mining payouts because no plots are owned at start.",
      "communication_protocols": "No communication and no coordinating authority are permitted; decisions are private and simultaneous; observables are limited to current ownership and last round’s plot-level contest flags and raid winners; defense choices and current-round action sequences of others are unobserved.",
      "decision_mechanisms": "Agents explicitly order unit actions in a single global sequence to express priorities such as 'DEFEND first, then MINE1 here, then MINE1 elsewhere'; the system does not reorder actions or prioritize DEFEND beyond legality; sequence position determines which actions are accepted before stamina runs out; agents must split intended mining into individual MINE1 units and place them in the sequence to control their execution relative to DEFEND and other actions.",
      "conflict_resolution_and_block_all_defense": "DEFEND(r,c) on a plot owned by the defender, if accepted at least once in the round, causes all RAIDs on that plot in that round to fail; multiple CLAIMs on the same unowned-at-start plot are resolved by uniform random selection of exactly one winning claimant; multiple RAIDs on the same undefended owned-at-start plot are resolved by uniform random selection of exactly one winning raider; all valid CLAIM/RAID participants pay their 1-stamina cost irrespective of success.",
      "targeting_domain_and_legality_rules": "CLAIM may only target plots that are unowned at the start of the round; RAID may only target plots that are owned at the start of the round and not by the raider; DEFEND may only target plots already owned by the defending agent; MINE1 may only target plots owned by the miner at the start of the round; these rules remove ambiguity about simultaneous CLAIM and RAID on the same plot and ensure mining cannot occur on newly acquired plots in the same round.",
      "uncertainty_and_incomplete_information": "Agents do not know others’ current-round defense precommits, action ordering, or stamina allocations; defense choices are private; tie-breakers are uniform random under a fixed RNG policy; agents only know last-round public outcomes and current ownership, inducing strategic uncertainty under block-all defense, short memory, and sequence-driven acceptance.",
      "execution_order_determinism_and_budget_handling": "No system-level 'DEFEND priority', 'row-major reordering', or post-hoc clipping is applied; the only ordering comes from the agent’s submitted sequence; stamina is consumed head-first as actions are accepted until S is exhausted, and all remaining actions are ignored; illegal or inapplicable actions are skipped without consuming stamina, preserving strategy freedom and reproducibility.",
      "reproducibility_and_random_seeds": "Use a single global RNG seeded by RUN_SEED; consume random draws in a fixed row-major traversal of plots when resolving tie-breaks to guarantee that the same inputs produce the same outputs; perform at least 30 independent seeds per N configuration for robustness.",
      "indexing_and_traversal_policy": "Row-major indexing idx(r,c)=10*r+c with r in [0,9], c in [0,9]; ascending traversal means 0→99 and descending means 99→0; RNG-driven tie-breaks iterate plots in ascending row-major order to allocate wins deterministically."
    },
    "details": {
      "agent_behaviors": "Per round, each agent observes current ownership, last round’s public contest flags and raid winners per plot, and its own prior actions and payoff; the agent then submits an ordered sequence of unit actions, each costing 1 stamina if accepted: DEFEND(r,c) to precommit defense on its own plot, MINE1(r,c) to request 1 point of mining on its own plot, CLAIM(r,c) to attempt to acquire an unowned-at-start plot, and RAID(r,c) to attempt to seize another agent’s owned-at-start plot; the agent should decompose any desire to mine 2 or 3 points into 2 or 3 MINE1 actions and place them in the sequence to control their relative timing with DEFEND; stamina S=10 is consumed as actions are accepted, and remaining actions are ignored once stamina is insufficient.",
      "decision_algorithms": "No specific algorithm is mandated; agents are LLM-driven and may use heuristic, myopic, or forward-looking strategies constrained by short memory; they may randomize to break symmetry; crucially, they must exploit sequencing to encode priorities such as 'defend early to guarantee block-all defense, then allocate MINE1 up to cap across owned plots' or 'interleave CLAIM/RAID and mining given the budget'; agents may learn from per-action feedback regarding which orderings better preserve holdings and yield mining output.",
      "specific_constraints": "Per-round stamina budget S=10 cannot be exceeded or carried over; each accepted unit action costs exactly 1 stamina; illegal or inapplicable unit actions are skipped and do not consume stamina (examples: MINE1 on a plot not owned at start; CLAIM on an already-owned-at-start plot; a second DEFEND on the same plot in the same round; RAID on one’s own plot; RAID on an unowned-at-start plot; CLAIM on a plot owned at start); per-plot mining cap s_max=3 enforces that at most 3 MINE1 on a given plot can be accepted for payout in a round, with additional MINE1 on that plot treated as inapplicable and skipped; newly acquired plots do not produce in the acquisition round; mining only pays on plots owned at the start and still owned after Stage B; tie-breakers are uniform random; stamina resets to S after each round.",
      "ordered_unit_action_submission_format": "Agents submit a single ordered list of unit actions for the round; system processes from the sequence head, deducting 1 stamina for each accepted legal unit action until remaining stamina < 1; remaining actions in the tail are ignored; there is no system-side reordering or prioritization; this sequence-driven execution replaces the previous per-plot vector submission and deterministic clipping pipeline.",
      "unit_action_legality_and_duplicates": "DEFEND(r,c) is only legal on plots currently owned by the submitting agent; if the agent has already had a DEFEND(r,c) accepted this round, any subsequent DEFEND(r,c) in the sequence is invalid and is discarded without cost; MINE1(r,c) is only legal on plots owned by the agent at the start of the round and counts only up to three accepted instances per plot per round; CLAIM(r,c) is only legal on plots unowned at the start; RAID(r,c) is only legal on plots owned at the start by another agent; illegal or inapplicable unit actions are skipped with no stamina deduction.",
      "budget_enforcement_mechanism": "Deterministic, agent-order-driven head-first consumption; there is no post-normalization or model-chosen clipping order; acceptance consumes budget in sequence order; skipped illegal actions do not consume budget; once S is exhausted, the remainder of the sequence is ignored.",
      "round_sequence_and_timing": "Stage A (Commit & acceptance): accept legal unit actions from each agent’s sequence in order, consuming stamina; track per-plot whether at least one DEFEND was accepted; Stage B (Ownership transitions): resolve CLAIMs on unowned-at-start plots and then RAIDs on owned-at-start plots using block-all defense; under defend[r,c] accepted, all RAIDs on that plot fail; under no defend and ≥1 valid raider, choose exactly one raider uniformly to become the new owner; all valid CLAIM/RAID attempts pay their 1-stamina cost; Stage C (Mining payouts): pay 1 gold per accepted MINE1 on plots owned at the start and still owned after Stage B, up to 3 per plot per round; newly acquired plots do not pay this round; round 1 has no mining payouts.",
      "tie_breaking_and_rng_policy": "Multiple CLAIMs on the same unowned-at-start plot: choose exactly one winner uniformly at random; multiple RAIDs on the same undefended owned-at-start plot: choose exactly one raider uniformly to become the new owner; use a single global random source (e.g., Mersenne Twister) seeded with RUN_SEED; produce random assignments by traversing plots in fixed row-major order to ensure that the same input yields the same output (完全可复现).",
      "feedback_and_agent_learning": "At the end of each round, the system returns to every agent: the actually accepted and executed unit action sequence, the ignored tail actions, and any actions discarded as illegal or inapplicable; for each plot, the final ownership and whether it was defended this round; for each of the agent’s unit actions, its realized output (for MINE1) or failure reason (e.g., illegal target, duplicate DEFEND, exceeded MINE1 cap, blocked RAID due to defense, tie-break loss); this granular feedback enables agents to learn effective ordering and defend/mine combinations.",
      "replication_logging_and_auditing": "For auditing and reproduction, log RUN_SEED, the accepted sequence per agent, the list of skipped illegal/inapplicable actions with reasons, the ignored tail due to budget exhaustion, and the per-plot RNG consumption order; fixed seeds and the absence of system-side reordering guarantee reproducibility across runs; maintain the minimal public history policy for agents while preserving detailed logs for researchers.",
      "validation_rules_and_domain_bounds": "Reject references to plots outside the allowed domain; enforce r in [0,9], c in [0,9], idx=10*r+c; preserve the rule '拒绝超出N个地块的其他土地' by rejecting any land indices beyond the defined valid plots 0..99; any out-of-range or non-integer action specifications are treated as invalid unit actions and are discarded without consuming stamina.",
      "first_round_no_mining_and_initial_gold": "Explicitly enforce that at t=1 no mining payouts occur (第一轮无法开采) because all plots are unowned at initialization (第一轮初始化所有地块无主); all miners start with 0 gold (矿工有0个金币).",
      "defense_commitment_cost_and_scope": "DEFEND can only defend a plot already owned by the defender (防御只能防御自己已经有的这块土地); a DEFEND unit action costs 1 stamina if and only if it is accepted (i.e., the first legal DEFEND on that plot this round); any subsequent DEFEND on the same plot in the same round is discarded without cost; when at least one DEFEND is accepted on a plot, all RAIDs on that plot fail for the round."
    }
  }
}