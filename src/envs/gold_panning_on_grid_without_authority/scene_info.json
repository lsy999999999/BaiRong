{
  "domain": "Economics",
  "scene_name": "gold_panning_on_grid_without_authority",
  "odd_protocol": {
    "overview": {
      "system_goal": "Study decentralized property-rights formation (stability, turnover, conflict intensity) and efficiency (global output) in a setting where agents maximize personal cumulative gold under incomplete information and no coordinating authority.",
      "agent_types": "N homogeneous miners (e.g., N=10 or 20) with identical integer stamina budgets S per round (e.g., S=10), no communication channels, and no central authority; agents differ only by internal policies and learned state.",
      "environment_description": "A homogeneous 10×10 grid (100 plots) representing gold-bearing plots, with effectively non-depleting stock realized via a per-plot per-round extraction cap s_max (e.g., s_max=3), and all plots start unowned.",
      "initialization_and_horizon": "Initial state: all 100 plots unowned; horizon: fixed number of rounds (configurable) with per-round resets of stamina budgets and publication of public logs.",
      "evaluation_focus": "Primary focus is individual cumulative gold maximization; system-level metrics such as total output, property-rights stability, turnover, and conflict intensity are recorded for evaluation but do not enter agent rewards.",
      "scene_theme": "Simulating the scene of miners panning for gold on a grid where claims, raids, defense, and mining occur without formal authority.",
      "resource_model": "Gold extraction is linear in mining stamina up to s_max per plot per round (1 stamina → 1 gold), with no inter-round depletion; output beyond s_max is capped.",
      "determinism_and_replayability_overview": "Each run uses a fixed run_seed; tie-breaks are resolved via SHA-256 hashing of canonical tuples with deterministic participant ordering, enabling full replayability and per-plot independence."
    },
    "design_concepts": {
      "interaction_patterns": "Per round: agents submit action bundles; engine applies legality pass and deterministic budget clipping; then resolves in order: (1) claims on unowned plots (random tie-break among claimants), (2) raids on owned plots with absolute defense if precommitted, otherwise random tie-break among raiders with transfer on success, (3) mining by current owners after ownership updates with linear output up to s_max, (4) public log publication with per-plot summary and notes on illegal-action removals; advance to next round.",
      "communication_protocols": "No communication; no authority. Agents cannot message each other and there is no coordinating authority. Public observables provide transparency without direct messaging.",
      "public_information_and_observables": "At the start of each round, every agent receives: (1) the current 10×10 ownership map; (2) the previous round’s public event log containing per-plot details (who claimed, who raided, who defended, who won, and mined output), plus notes on illegal actions dropped.",
      "private_state_and_memory": "Agents may use arbitrary internal memory across rounds, including their own cumulative histories, heuristics, and learned opponent models; no private external channels are allowed.",
      "decision_mechanisms": "Each agent has an integer stamina budget S (e.g., S=10) that resets every round and does not carry over. Agents submit a single action bundle comprising: (a) Claims: a list of unowned plots to claim (cost 1 stamina each); (b) Raids: a list of owned plots (owned by others) to raid (cost 1 stamina each); (c) Defense: a 0/1 precommitment per currently owned plot, where 1 costs 1 stamina and is always spent and provides absolute protection for that round; (d) Mining: integer allocations per owned plot in 0..s_max (e.g., s_max=3), with mining stamina only spent if the agent owns the plot after conflict resolution. Illegal actions are dropped at zero cost during validation, then budget clipping is applied deterministically to ensure total net stamina cost does not exceed S.",
      "validation_and_legality_rules": "Legality pass removes illegal actions at zero cost before budget checks with transparency in the public log. Examples of illegal actions include claiming an already-owned plot, raiding an unowned plot, and mining on a plot not owned at round start.",
      "budget_and_clipping_rules": "Budget rule: net stamina cost (claims + raids + sum(defense) + sum(mining)) must not exceed S. Over-budget handling (deterministic): agents may optionally include a priority ordering over action categories and an ordered list within each category; if over budget, the engine applies minimal-change clipping by removing actions from the end of the agent-declared order until the plan fits S. If no priority/order is provided, the default clip order is Mining → Raids → Claims → Defense, removing last-listed items within each category first. This ensures repeatable outcomes and allows agents to express defend-vs-mine trade-offs.",
      "conflict_resolution_rules": "Claims resolution: for each unowned plot with ≥1 claim, select one winner via RNG; losers still pay the 1 stamina. Raids resolution: if the owner precommitted defense=1 on a plot, all raids on that plot fail; if no defense and ≥1 raider, select a raider as winner via RNG and immediately transfer ownership; all raiders pay 1 stamina, only the winner gains ownership.",
      "mining_and_output_semantics": "After ownership updates, only current owners mine their own plots. Per-plot output is gold = min(stamina_allocated, s_max). Mining stamina allocated to plots lost during the round is forfeited. Ownership timing: transfers occur before mining; new owners may mine in the same round if they allocated mining to that plot and the allocation survives clipping and they end up as owner; given the legality pass, mining allocations are only valid on plots owned at round start.",
      "rng_and_reproducibility": "Run seed: each simulation run has a fixed integer run_seed. Event-local draws use H = SHA256(run_seed, round_idx, plot_row, plot_col, event_type, sorted_participant_ids), with all participant lists sorted by agent ID before hashing. Winners on a plot are selected by taking the minimal hash (or modular ranking) among participants. RNG is used to pick a winner among multiple claimants on an unowned plot and among raiders on an undefended owned plot. Different plots use distinct (row,col) values, guaranteeing per-plot independence and full replayability.",
      "transparency_and_canonicalization": "All submitted sets and lists are normalized (deduplicated and sorted by (row,col)) before validation and clipping to ensure consistent behavior. The engine returns each agent’s executed action bundle after clipping for learning and accountability.",
      "strategic_uncertainty": "Agents observe global ownership and last round’s public log but do not know others’ current-round choices; policies must anticipate claims, raids, and defenses under uncertainty."
    },
    "details": {
      "agent_behaviors": "Agents maximize their own cumulative gold over the horizon and can deploy stamina across expansion (claims), predation (raids), protection (defense), and extraction (mining), subject to legality and budget constraints. Agents face trade-offs such as defending versus mining under a fixed per-round budget, and they may adapt to observed conflict patterns and opponent tendencies over time.",
      "decision_algorithms": "No mandated algorithm. Agents may use myopic heuristics, limited forward lookahead, opponent modeling, rule-based strategies, or learned policies. They must output integer allocations that satisfy constraints; if they intentionally over-specify, they should include a category priority and within-category order so deterministic clipping preserves intended trade-offs.",
      "specific_constraints": "Grid: 10×10 homogeneous plots (100 total). Stamina: integer S per agent per round (e.g., S=10), no carryover. Mining cap: integer s_max per plot per round (e.g., s_max=3), with linear output up to the cap (1 stamina → 1 gold). Costs: claim=1, raid=1, defense∈{0,1} per owned plot, mining ∈ 0..s_max per owned plot. Defense semantics: defense=1 on a plot makes all raids on that plot fail this round; no multi-unit defense; no residual protection across rounds. Ownership timing: transfers occur before mining; new owners may mine in the same round if they allocated mining to that plot and the allocation survives clipping and they end up as owner; mining stamina is only spent if the agent owns the plot after conflict resolution; mining allocations to plots lost during resolution are forfeited. Illegal actions: dropped at zero cost during validation with a transparency note in the public log. Ties and conflicts: resolved by the per-plot RNG protocol described using SHA-256 hashing of canonical tuples.",
      "round_submission_and_execution_pipeline": "Submission and validation: apply legality pass; enforce budget via deterministic clipping. Then: (1) resolve claims on unowned plots with RNG tie-breaks; (2) resolve raids on owned plots with absolute defense if precommitted, otherwise RNG tie-break among raiders with immediate ownership transfer; (3) apply mining by current owners with output gold = min(stamina_allocated, s_max); (4) publish per-plot public log and advance to next round.",
      "observability_and_information_flow": "At each round start, agents receive the 10×10 ownership map and the previous round’s per-plot public event log (claims, raids, defense, winners, mined output, and illegal-action notes). Agents do not observe current-round choices of others and cannot communicate; the engine also returns each agent’s executed action bundle after clipping.",
      "run_seed_and_event_local_draws": "Each run uses a fixed run_seed. For each contested plot event, compute H = SHA256(run_seed, round_idx, plot_row, plot_col, event_type, sorted_participant_ids). Select winners by taking the minimal hash (or modular ranking) among participants. Participant lists are sorted by agent ID to ensure determinism. RNG is used for multi-claimant unowned plots and multi-raider undefended plots; different plots are independent.",
      "example_parameterization": "Typical parameters include N=10 or 20 agents, stamina S=10 per agent per round, s_max=3 per plot per round, a 10×10 grid, and a fixed but configurable horizon.",
      "edge_case_handling": "Illegality examples (removed at zero cost): claiming an already-owned plot, raiding an unowned plot, mining on a plot not owned at round start. Over-budget minimal-change clipping removes actions from the end of the agent-declared order (or default Mining → Raids → Claims → Defense) and removes last-listed items within each category first. If defense=1, all raids on that plot fail. Multiple claimants or raiders are tie-broken via the RNG protocol. Losers of claims or raids still pay the 1 stamina. Mining stamina on plots lost is forfeited. Output is capped at s_max per plot per round. No multi-unit defense and no stamina carryover. No residual defense across rounds.",
      "data_normalization_and_ordering": "All action lists are deduplicated and sorted by (row,col) before validation and clipping. Participant IDs in contested events are sorted before hashing. This canonicalization guarantees consistent, reproducible outcomes and per-plot independence.",
      "public_log_contents": "For each plot per round, the public log records who claimed, who raided, who defended, who won, and the mined output, and also notes illegal actions removed during validation; the engine returns each agent’s executed bundle post-clipping to support learning."
    }
  }
}