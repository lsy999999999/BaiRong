{
    "domain": "Economics",
    "scene_name": "grid_based_gold_exploitation",
    "odd_protocol": {
        "overview": {
            "system_goal": "Enable agents to strategically exploit grid plots to maximize cumulative gold gains with an infinite resource baseline.",
            "agent_types": "N homogeneous miners (e.g., N=10 or 20), identical stamina allocations, no communication or authoritative control.",
            "environment_description": "Agents operate in a 10x10 grid with 100 plots, starting unowned, where they engage in claiming, raiding, defending, and mining to gather gold.",
            "horizon": "Fixed number of rounds configurable up to 500 for robustness testing.",
            "initial_state": "All plots start unowned, evolving based on agent actions and interactions."
        },
        "design_concepts": {
            "interaction_patterns": "Agents interact by claiming, raiding, defending, and mining on plots with assigned costs, and resolve conflicts deterministically.",
            "communication_protocols": "No direct communication; agents rely on publicly observable data such as the ownership map and public event logs, and private internal memory.",
            "decision_mechanisms": "Agents submit action bundles consisting of plotting claims, raids, defenses, and mining allocations, constrained by a round-based stamina budget and prioritized clipping for budget overruns.",
            "legality_and_budget_handling": "Illegal actions are removed before cost checks; budget excess is managed by deterministic clipping following optional agent-specified priorities.",
            "stamina_and_cost": "Agents receive an integer stamina budget (e.g., 10) each round, with specific stamina costs for actions: claiming, raiding, defending, and mining."
        },
        "details": {
            "agent_behaviors": "Agents aim to maximize gold by expanding domains, raiding others, protecting their plots, and extracting resources strategically under uncertainty.",
            "decision_algorithms": "Agents utilize strategies ranging from myopic heuristics to complex learning models, ensuring constraints compliance and prioritizing actions where necessary.",
            "specific_constraints": "Stamina is fixed per round with no carryover; mining yields are capped per plot per round; ownership transitions dictate mining eligibility post-conflict resolution.",
            "rng_and_reproducibility": "Events use a deterministic RNG protocol based on SHA-256 hashes to ensure fairness and reproducibility; event-local draws determine conflict outcomes.",
            "public_logging": "Per-round logs provide transparency on claims, raids, defenses, and outcomes, fostering strategic adaptations by agents."
        }
    },
    "agent_types": {
        "MinerAgent": "An agent responsible for mining gold from plots and strategically expanding its domain within the grid while managing stamina and cost constraints.",
        "RaiderAgent": "An agent specialized in raiding plots owned by other agents to capture gold and disrupt opponents' strategies, operating within stamina limits.",
        "DefenderAgent": "An agent dedicated to protecting its own plots from being raided by other agents, employing strategic defenses based on stamina availability.",
        "ClaimAgent": "An agent focused on claiming unowned plots to expand its resource base and enable mining operations, subject to stamina constraints.",
        "BaselineMiner": "Purpose: The default agent for your Mechanism 1; verifies whether property rights can be spontaneously stabilized under the \"homogeneous resources + homogeneous stamina + no communication/authority\" scenario.\n\nObserved Information: Current global possession, public history/results of the previous round, own stamina S, mining limit per plot.\n\nActions Available (constrained by budget S, integer allocation):\n\nClaim (1 stamina/plot): Claim unoccupied plots\n\nRaid (1 stamina/plot): Raid others' plots\n\nDefend (0 or 1 stamina/occupied plot): Pre-commit, guaranteed penalty if selected\n\nMine (0..3 stamina/occupied plots, ≤ 3 per plot)\n\nStrategy Style: Myopic but rational profit maximization",
        "RandomMiner": "Purpose: Control group/robustness check.\n\nAction: Randomly distributes health to Claim/Raid/Defend/Mine within the legal space, strictly within S",
        "Opportunist": "Purpose: More closely aligned with \"accounting\" types; ROI ranking based on public information.\n\nStrategy Style: Dynamically switches between Claim, Raid, Defend, and Mine based on publicly visible congestion, recent contention, and mine limits; prioritizes defense in hotspots.\n\nExpected Phenomenon: Moderate conflict, high efficiency.",
        "Norm-Follower": "Purpose: Examine the impact of cultural/normative differences on property rights formation.\n\nStrategy Style: Never raid; only claim unowned land, defend, and mine.\n\nExpected Phenomenon: When mixed with other types, \"soft law\" property rights are more likely to emerge.",
        "Learner(BanditMiner)": "Purpose: Examine the impact of learnable institutions (short-term memory, historically adjusted allocation) on conflict and efficiency.\n\nStrategy Style: Maintain estimates of each plot's \"hotness/attack probability/reward\"; use UCB/Thompson for exploration and exploitation in Claim/Raid/Defend/Mine; use only public history (or a limited N-round window).\n\nExpected Behavior: More exploration in the early stages, more robustness and higher yields in the later stages.",
        "DeterministicOracle": "Purpose: Required component for resolving disputes arising from multiple simultaneous claims or raids on the same plot.\n\nMethod: Use a deterministic hash (e.g., SHA256(\"round|plot|sorted_agent_ids|seed\")) for reproducible experiments and modulo-determine the winner; also used for determining the winner when multiple raids arrive simultaneously.\n\nBenefits: Highly reproducible, fair, and independent of agent order.",
        "Registry": "Purpose: Ownership ledger and public bulletin board.\n\nResponsibility: Maintains information such as \"plot → current owner, round of acquisition, most recent defense pre-submission, protection window start and end\"; provides an overview of the previous round to all agents.\n\nNote: This also serves as the basis for implementing the \"protection window\" and budget trimming rules."
    },
    "portrait": {
        "MinerAgent": 3,
        "RaiderAgent": 5,
        "DefenderAgent": 5,
        "ClaimAgent": 3,
        "BaselineMiner": 2,
        "RandomMiner": 2,
        "Opportunist": 4,
        "Norm-Follower": 5,
        "Learner(BanditMiner)": 2,
        "DeterministicOracle": 1,
        "Registry": 1
    }
}